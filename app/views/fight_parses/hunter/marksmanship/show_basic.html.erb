<%= render 'fight_parses/shared/new_header', {active_tab: @tab} %>
<div class="container">
  <% max_dps = @kpi_parses['dps'].details_hash.values.map{|item| item[:damage]}.max.to_i rescue 0 %>
  <%= render 'fight_parses/shared/section', 
    {
      title: 'Damage per Second',
      desc: 'Total damage / Fight time. Pet damage is shown with a separate color',
      light_bar_width: 100,
      main_bar_width: bar_width(@fp.kpi_hash[:player_damage_done].to_i, @fp.kpi_hash[:player_damage_done].to_i + @fp.kpi_hash[:pet_damage_done].to_i),
      main_bar_text: "#{number_to_human(@fp.dps)}/s",
      main_text: "#{number_to_human(@fp.kpi_hash[:player_damage_done].to_i + @fp.kpi_hash[:pet_damage_done].to_i)} total damage (#{number_to_human(@fp.kpi_hash[:pet_damage_done].to_i)} pet)",
      dropdown: {id: 'dps'},
      sub_bars: @kpi_parses['dps'].nil? ? nil : @kpi_parses['dps'].details_hash.values.sort{|a, b| b[:damage].to_i <=> a[:damage].to_i}.map{|item| 
        {
          label: item[:name],
          width: bar_width(item[:damage].to_i, max_dps),
          text: number_to_human(item[:damage].to_i / 1000),
          sub_text: "#{number_to_human(item[:damage].to_i)} damage",
        }
      },
    } 
  %>
  <%= render 'fight_parses/shared/section', 
    {
      title: 'Vulnerable Uptime',
      desc: "The percentage of time the Vulnerable debuff was active on targets you were attacking. You should aim to have as many applications of Vulnerable as possible throughout the fight#{", and let each application expire fully to take advantage of Patient Sniper." if @fp.talent(3) == 'Patient Sniper'}",
      white_bar: true,
      dropdown: {id: 'vulnerable'},
      main_bar_width: @fp.debuff_upratio(:vulnerable),
      main_bar_text: "#{@fp.debuff_upratio(:vulnerable).to_i}%",
      main_text: "#{@fp.fight_time / @fp.kpi_hash[:vulnerable_count].to_i rescue 0} sec/vuln",
      sub_bar_type: 'debuff',
      sub_bars: @debuffs['Vulnerable'].nil? ? nil : @debuffs['Vulnerable'].map{|item| 
        {
          debuff: item,
          label: item.target_name,
          id: "debuff-#{item.id}-#{item.target_id}",
          sub_text: item.upratio_s,
        }
      }
    } 
  %>
  <% if @fp.talent(3) == 'Patient Sniper' && !@fp.kpi_hash[:patient_sniper_casts].nil? %>
    <%= render 'fight_parses/shared/section', 
      {
        title: 'Patient Sniper Efficiency',
        desc: 'Every time you apply Vulnerable, cast an Aimed Shot with <2 seconds remaining (ideally 1) to maximize the damage bonus. This section shows when the last Aimed Shot was cast during each Vulnerable window. This ignores times when the enemy died too quickly, as well as when you had Trueshot active, as during Trueshot you should instead try to cast as many Aimed Shots as possible.',
        white_bar: true,
        main_bar_width: bar_width(@fp.kpi_hash[:patient_sniper_casts][1].to_i + @fp.kpi_hash[:patient_sniper_casts][2].to_i, @fp.kpi_hash[:vulnerable_count].to_i),
        main_bar_text: "#{@fp.kpi_hash[:patient_sniper_casts][1].to_i + @fp.kpi_hash[:patient_sniper_casts][2].to_i} / #{@fp.kpi_hash[:vulnerable_count].to_i}",
        main_text: "#{@fp.kpi_hash[:patient_sniper_casts][1].to_i + @fp.kpi_hash[:patient_sniper_casts][2].to_i} / #{@fp.kpi_hash[:vulnerable_count].to_i}",
        sub_bars: @fp.kpi_hash[:patient_sniper_casts].nil? ? nil : @fp.kpi_hash[:patient_sniper_casts].map{|secs, count| 
          {
            label: (secs.is_a?(Integer) ? "<#{secs} sec" : secs),
            bar_key: 'sniper-w',
            val: count,
            text: count,
            sub_text: "#{count} casts",
          }
        },
      } 
    %>
  <% else %>
    <%= render 'fight_parses/shared/section', 
      {
        title: 'Damage Dealt While Vulnerable',
        desc: 'Try to maximize the damage you deal within each application of Vulnerable.',
        main_bar_width: 100,
        main_bar_text: "#{@fp.kpi_hash[:vulnerable_damage].to_i / @fp.fight_time}/sec",
        main_text: "#{@fp.kpi_hash[:vulnerable_damage].to_i / 1000}k dmg",
        sub_bars: @fp.kpi_hash[:vulnerable_ablities].nil? ? nil : @fp.kpi_hash[:vulnerable_ablities].values.sort{|a, b| b[:damage].to_i <=> a[:damage].to_i}.map{|item| 
          {
            label: item[:name],
            bar_key: 'vulnerable-w',
            val: item[:damage],
            text: "#{item[:damage].to_i / 1000}k",
            sub_text: "#{item[:casts].to_i} hits",
          }
        },
      } 
    %>
  <% end %>
  <% if @kpi_parses.has_key?('death') && @kpi_parses['death'].kpi_hash[:death_count].to_i > 0 %>
    <%= render 'fight_parses/shared/deaths', 
      {
        deaths: @kpi_parses['death'].details_hash[:deaths],
      } 
    %>
  <% end %>
</div>
<%= render 'fight_parses/shared/js', {tab: 'basic'} %> 
<script>
    $(['vulnerable-w', 'mark-w', 'sniper-w']).each(function(index, key){
    resizeBars(key)
  });
</script>