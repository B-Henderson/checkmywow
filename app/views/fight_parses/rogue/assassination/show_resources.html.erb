<%= render 'fight_parses/shared/new_header', {active_tab: @tab} %>
<div class="container">
  <% score = 100 * (@fp.fight_time - @fp.resources_hash[:capped_time].to_i) / @fp.fight_time %>
  <%= render 'fight_parses/shared/section', 
    {
      title: 'Time not Energy-Capped',
      desc: 'The percent of the fight that you had less than max Energy. Aim for 100%.',
      label: score >= 95 ? 'good' : score >= 90 ? 'ok' : 'bad',
      white_bar: true,
      main_bar_width: bar_width(@fp.fight_time - @fp.resources_hash[:capped_time].to_i, @fp.fight_time),
      main_bar_text: "#{score}%",
      main_text: "#{@fp.fight_time - @fp.resources_hash[:capped_time].to_i}s / #{@fp.fight_time}s",
    } 
  %>
  <%= render 'fight_parses/shared/section', 
    {
      title: 'Combo Points Gained',
      desc: 'Avoid overcapping Combo Points by not using Combo Point-generating abilities that would put you over the maximum amount. Seal of Fate is ignored for this, since it can be hard to avoid over-capping.',
      label: @fp.resources_hash[:combo_waste].to_i == 0 ? 'good' : @fp.resources_hash[:combo_waste].to_i < 5 ? 'ok' : 'bad',
      white_bar: true,
      main_bar_width: bar_width(@fp.resources_hash[:combo_gain].to_i, @fp.resources_hash[:combo_gain].to_i + @fp.resources_hash[:combo_waste].to_i),
      main_bar_text: "#{@fp.resources_hash[:combo_gain].to_i}/#{@fp.resources_hash[:combo_gain].to_i + @fp.resources_hash[:combo_waste].to_i}",
      main_text: "#{@fp.resources_hash[:combo_waste].to_i} wasted",
      sub_bars: @fp.resources_hash[:combo_abilities].nil? ? nil : @fp.resources_hash[:combo_abilities].values.sort{|a, b| (b[:gain].to_i + b[:waste].to_i) <=> (a[:gain].to_i + a[:waste].to_i)}.map{|item| 
        {
          label: item[:name],
          white_bar: true,
          bar_key: 'combo-w',
          val: item[:gain].to_i + item[:waste].to_i,
          width: bar_width(item[:gain].to_i, item[:gain].to_i + item[:waste].to_i),
          text: "#{item[:gain].to_i}/#{item[:gain].to_i + item[:waste].to_i}",
          sub_text: "#{item[:waste].to_i} wasted",
        }
      },
    } 
  %>
  <% max = @fp.resources_hash[:combo_spend]['Rupture'][:combo][@fp.max_combo - 1].to_i + @fp.resources_hash[:combo_spend]['Rupture'][:combo][@fp.max_combo].to_i rescue 0 %>
  <% total = @fp.resources_hash[:combo_spend]['Rupture'][:combo].map{|k,v| v }.sum rescue 0 %>
  <% if total > 0 %>
    <%= render 'fight_parses/shared/section', 
      {
        title: 'Combo Points Usage - Rupture',
        desc: 'The amount of Combo Points spent on each cast of Rupture. Try to cast with close to max Combo Points as often as possible. This ignores the first 5 seconds of the encounter, since you will be casting with fewer Combo Points in your opener.',
        label: total - max == 0 ? 'good' : total - max <= 3 ? 'ok' : 'bad',
        white_bar: true,
        main_bar_width: bar_width(max, total),
        main_bar_text: "#{max}/#{total}",
        main_text: "#{max}/#{total} casts with 5-6 Combo Points",
        sub_bars: @fp.resources_hash[:combo_spend]['Rupture'][:combo].map{|combo, num| 
          {
            label: "#{combo} Combo Points",
            bar_key: 'rupture-w',
            val: num,
            text: "#{num}",
            sub_text: "#{num} casts",
          }
        },
      } 
    %>
  <% end %>
  <% max = @fp.resources_hash[:combo_spend]['Envenom'][:combo][@fp.max_combo - 1].to_i + @fp.resources_hash[:combo_spend]['Envenom'][:combo][@fp.max_combo].to_i rescue 0 %>
  <% total = @fp.resources_hash[:combo_spend]['Envenom'][:combo].map{|k,v| v }.sum rescue 0 %>
  <% if total > 0 %>
    <%= render 'fight_parses/shared/section', 
      {
        title: 'Combo Points Usage - Envenom',
        desc: 'The amount of Combo Points spent on each cast of Envenom. Try to cast with close to max Combo Points as often as possible, but casting with fewer Combo Points is better than letting it drop off. This ignores the first 5 seconds of the encounter, since you will be casting with fewer Combo Points in your opener.',
        white_bar: true,
        main_bar_width: bar_width(max, total),
        main_bar_text: "#{max}/#{total}",
        main_text: "#{max}/#{total} casts with 5-6 Combo Points",
        sub_bars: @fp.resources_hash[:combo_spend]['Envenom'][:combo].map{|combo, num| 
          {
            label: "#{combo} Combo Points",
            bar_key: 'envenom-w',
            val: num,
            text: "#{num}",
            sub_text: "#{num} casts",
          }
        },
      } 
    %>
  <% end %>
</div>
<%= render 'fight_parses/shared/js', {tab: 'resources'} %> 
<script>
    $(['combo-w', 'rupture-w', 'envenom-w']).each(function(index, key){
    resizeBars(key)
  });
</script>