<div class="container">
  <%= render 'bosses/shared/header', tab: 'basic' %>
  <% max_dps = @fps.map{|fp| fp.dps || 0 }.max.to_i %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Damage per Second',
      desc: 'Total damage / Fight time. Pet damage is shown with a separate color.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          light_bar_width: bar_width(fp.dps, max_dps),
          main_bar_width: bar_width(fp[:kpi_hash][:player_damage_done].to_i, fp[:kpi_hash][:player_damage_done].to_i + fp[:kpi_hash][:pet_damage_done].to_i), 
          main_bar_text: "#{fp.dps}/s",
          main_text: "#{(fp[:kpi_hash][:player_damage_done].to_i + fp[:kpi_hash][:pet_damage_done].to_i) / 1000}k total damage (#{fp[:kpi_hash][:pet_damage_done].to_i / 1000}k pet)"
        }
      }
    } 
  %>
  <% max_dtps = @fps.map{|fp| fp.dtps || 0 }.max.to_i %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Damage Taken per Second',
      desc: 'This is the total damage (divided by fight time) that actually reduced your HP. Absorbed damage is not included. Try to keep this low.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          main_bar_width: bar_width(fp.dtps, max_dtps), 
          main_bar_text: "#{fp.dtps}/s",
          main_text: "#{fp[:kpi_hash][:damage_taken].to_i / 1000}k total damage taken"
        }
      }
    } 
  %>
  <% max_shps = @fps.map{|fp| fp.shps || 0 }.max.to_i %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Self Healing per Second',
      desc: 'The total amount (divided by fight time) that you healed yourself. Absorbs are shown with a separate color.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          light_bar_width: bar_width(fp.shps, max_shps), 
          main_bar_width: bar_width(fp[:kpi_hash][:self_heal].to_i, (fp[:kpi_hash][:self_heal].to_i + fp[:kpi_hash][:self_absorb].to_i)), 
          main_bar_text: "#{fp.shps}/s",
          main_text: "#{fp[:kpi_hash][:self_heal].to_i / 1000}k healed, #{fp[:kpi_hash][:self_absorb].to_i / 1000}k absorbed"
        }
      }
    } 
  %>
  <% max_ehps = @fps.map{|fp| fp.ehps || 0 }.max.to_i %>
  <%= render 'bosses/shared/section', 
    {
      title: 'External Healing per Second',
      desc: 'The total amount (divided by fight time) that other sources healed you. Absorbs are shown with a separate color. Avoid damage to keep this low.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          light_bar_width: bar_width(fp.ehps, max_ehps), 
          main_bar_width: bar_width(fp[:kpi_hash][:external_heal].to_i, fp[:kpi_hash][:external_heal].to_i + fp[:kpi_hash][:external_absorb].to_i), 
          main_bar_text: "#{fp.ehps}/s",
          main_text: "#{fp[:kpi_hash][:external_heal].to_i / 1000}k healed, #{fp[:kpi_hash][:external_absorb].to_i / 1000}k absorbed"
        }
      }
    } 
  %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Cast Efficiency',
      desc: 'Make sure you are casting your key spells on cooldown. Your cast score is determined by a weighted average, with more emphasis placed on abilities with longer cooldown times.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          white_bar: true,
          main_bar_width: fp.kpi_hash[:casts_score].to_i,
          main_bar_text: "#{fp.kpi_hash[:casts_score].to_i}%",
          main_text: "#{fp.kpi_hash[:casts_score].to_i}\% cast efficiency",
        }
      }
    } 
  %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Bone Shield Uptime',
      desc: "The duration that you had Bone Shield active, or above 5 stacks if you took Ossuary. Try to maintain this buff as much as possible.",
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          white_bar: true,
          main_bar_width: bar_width(fp.kpi_hash[:bs_uptime].to_i, fp.ended_at - fp.started_at),
          main_bar_text: "#{fp.kpi_hash[:bs_uptime].to_i / (10 * fp.fight_time) rescue 0}%",
          main_text: "#{fp.kpi_hash[:bs_uptime].to_i / 1000}s / #{fp.fight_time}s",
        }
      }
    } 
  %>
  <% fps = @fps.reject{|fp| fp.talent(2) != 'Ossuary'} %>
  <% if fps.count > 1 %>
    <%= render 'bosses/shared/section', 
      {
        title: 'Death Strike Casts with Ossuary',
        desc: 'You should always use Death Strike when Ossuary is active (you have at least 5 stacks of Bone Shield) to benefit from the reduced Runic Power cost.',
        sub_bars: @fps.map{|fp| 
          {
            fp: fp,
            white_bar: true,
            main_bar_width: bar_width(fp.kpi_hash[:ds_count].to_i - fp.kpi_hash[:ds_no_ossuary].to_i, fp.kpi_hash[:ds_count].to_i),
            main_bar_text: "#{fp.kpi_hash[:ds_count].to_i - fp.kpi_hash[:ds_no_ossuary].to_i}/#{fp.kpi_hash[:ds_count].to_i}",
            main_text: "#{fp.kpi_hash[:ds_no_ossuary].to_i} casts missing buff",
          }
        }
      } 
    %>
  <% end %>
  <% max_ds = @fps.map{|fp| fp.kpi_hash[:ds_heal].to_i + fp.kpi_hash[:ds_overheal].to_i}.max.to_i %>
  <%= render 'bosses/shared/section', 
    {
      title: 'Death Strike Efficiency',
      desc: 'Your total healing from Death Strikes, taking overhealing into account. Overhealing is often unavoidable, but you should do your best to cast Death Strike when you have low health.',
      sub_bars: @fps.map{|fp| 
        {
          fp: fp,
          white_bar: true,
          white_bar_width: bar_width(fp.kpi_hash[:ds_heal].to_i + fp.kpi_hash[:ds_overheal].to_i, max_ds),
          main_bar_width: bar_width(fp.kpi_hash[:ds_heal].to_i, fp.kpi_hash[:ds_heal].to_i + fp.kpi_hash[:ds_overheal].to_i),
          main_bar_text: "#{fp.kpi_hash[:ds_heal].to_i / 1000}k",
          main_text: "#{100 * fp.kpi_hash[:ds_overheal].to_i / (fp.kpi_hash[:ds_heal].to_i + fp.kpi_hash[:ds_overheal].to_i) rescue 0}% overheal",
        }
      }
    } 
  %>
</div>
<%= render 'bosses/shared/footer', tab: 'basic' %>
